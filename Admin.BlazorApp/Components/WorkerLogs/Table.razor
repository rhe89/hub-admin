@using Admin.BlazorApp.Services
@using Admin.BlazorApp.ViewModel
@typeparam TApiClient

@if (_workerLogsViewModel == null)
{
    return;
}

@if (!_workerLogsViewModel.Success)
{
    <p class="alert alert-danger">
        Feil oppstod: @_workerLogsViewModel?.ErrorMessage
    </p>
    return;
}
<table class="table worker-log-table table-responsive">
    <thead>
        <tr>
            <th>Navn</th>
            <th>Sist kj√∏rt</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var workerLog in _workerLogsViewModel.WorkerLogs)
    {
        if (workerLog.Success)
        {
            <tr class="success-row">
                <td style="width:30%;">
                    @workerLog.Name
                </td>
                <td style="width:40%;">@workerLog.CreatedDate.ToString("dd.MM.yyyy HH:mm:ss")</td>
            </tr> 
        } 
        else 
        {
            <tr class="error-row" @onclick="@(() => ShowModal(workerLog.ErrorMessage))">
                <td style="width:30%;">
                    @workerLog.Name
                </td>
                <td style="width:40%;">@workerLog.CreatedDate.ToString("dd.MM.yyyy HH:mm:ss")</td>
            </tr> 
        }
            
    }
    </tbody>
</table>


@code
{
    [Parameter]
    public IWorkerLogService<TApiClient> WorkerLogService { get; set; }

    [CascadingParameter] public IModalService Modal { get; set; }

    private void ShowModal(string message)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(MessageModal.Message), message);
        
        Modal.Show<MessageModal>("Feilmelding", parameters);
    }
    
    private WorkerLogsViewModel _workerLogsViewModel;
    
    protected override async Task OnInitializedAsync()
    {
        _workerLogsViewModel = await WorkerLogService.GetWorkerLogs(30);
    }
}